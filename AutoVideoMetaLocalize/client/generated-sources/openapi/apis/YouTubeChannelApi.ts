/* tslint:disable */
/* eslint-disable */
/**
 * Meta Localize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ChannelListResponse,
    ChannelListResponseFromJSON,
    ChannelListResponseToJSON,
} from '../models';

export interface ApiYouTubeChannelListGetRequest {
    part?: string | null;
    categoryId?: string | null;
    forUsername?: string | null;
    hl?: string | null;
    id?: string | null;
    managedByMe?: boolean | null;
    maxResults?: number | null;
    mine?: boolean | null;
    mySubscribers?: boolean | null;
    onBehalfOfContentOwner?: string | null;
    pageToken?: string | null;
}

/**
 * no description
 */
export class YouTubeChannelApi extends runtime.BaseAPI {

    /**
     */
    async apiYouTubeChannelListGetRaw(requestParameters: ApiYouTubeChannelListGetRequest): Promise<runtime.ApiResponse<ChannelListResponse>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.part !== undefined) {
            queryParameters['Part'] = requestParameters.part;
        }

        if (requestParameters.categoryId !== undefined) {
            queryParameters['CategoryId'] = requestParameters.categoryId;
        }

        if (requestParameters.forUsername !== undefined) {
            queryParameters['ForUsername'] = requestParameters.forUsername;
        }

        if (requestParameters.hl !== undefined) {
            queryParameters['Hl'] = requestParameters.hl;
        }

        if (requestParameters.id !== undefined) {
            queryParameters['Id'] = requestParameters.id;
        }

        if (requestParameters.managedByMe !== undefined) {
            queryParameters['ManagedByMe'] = requestParameters.managedByMe;
        }

        if (requestParameters.maxResults !== undefined) {
            queryParameters['MaxResults'] = requestParameters.maxResults;
        }

        if (requestParameters.mine !== undefined) {
            queryParameters['Mine'] = requestParameters.mine;
        }

        if (requestParameters.mySubscribers !== undefined) {
            queryParameters['MySubscribers'] = requestParameters.mySubscribers;
        }

        if (requestParameters.onBehalfOfContentOwner !== undefined) {
            queryParameters['OnBehalfOfContentOwner'] = requestParameters.onBehalfOfContentOwner;
        }

        if (requestParameters.pageToken !== undefined) {
            queryParameters['PageToken'] = requestParameters.pageToken;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/YouTubeChannel/List`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => ChannelListResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiYouTubeChannelListGet(requestParameters: ApiYouTubeChannelListGetRequest): Promise<ChannelListResponse> {
        const response = await this.apiYouTubeChannelListGetRaw(requestParameters);
        return await response.value();
    }

}
