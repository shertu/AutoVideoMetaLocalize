/* tslint:disable */
/* eslint-disable */
/**
 * Meta Localize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResourceId,
    ResourceIdFromJSON,
    ResourceIdFromJSONTyped,
    ResourceIdToJSON,
    ThumbnailDetails,
    ThumbnailDetailsFromJSON,
    ThumbnailDetailsFromJSONTyped,
    ThumbnailDetailsToJSON,
} from './';

/**
 * 
 * @export
 * @interface PlaylistItemSnippet
 */
export interface PlaylistItemSnippet {
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    channelId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    channelTitle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    playlistId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PlaylistItemSnippet
     */
    position?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    publishedAt?: string | null;
    /**
     * 
     * @type {ResourceId}
     * @memberof PlaylistItemSnippet
     */
    resourceId?: ResourceId;
    /**
     * 
     * @type {ThumbnailDetails}
     * @memberof PlaylistItemSnippet
     */
    thumbnails?: ThumbnailDetails;
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistItemSnippet
     */
    eTag?: string | null;
}

export function PlaylistItemSnippetFromJSON(json: any): PlaylistItemSnippet {
    return PlaylistItemSnippetFromJSONTyped(json, false);
}

export function PlaylistItemSnippetFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistItemSnippet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelId': !exists(json, 'channelId') ? undefined : json['channelId'],
        'channelTitle': !exists(json, 'channelTitle') ? undefined : json['channelTitle'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'playlistId': !exists(json, 'playlistId') ? undefined : json['playlistId'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'publishedAt': !exists(json, 'publishedAt') ? undefined : json['publishedAt'],
        'resourceId': !exists(json, 'resourceId') ? undefined : ResourceIdFromJSON(json['resourceId']),
        'thumbnails': !exists(json, 'thumbnails') ? undefined : ThumbnailDetailsFromJSON(json['thumbnails']),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'eTag': !exists(json, 'eTag') ? undefined : json['eTag'],
    };
}

export function PlaylistItemSnippetToJSON(value?: PlaylistItemSnippet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelId': value.channelId,
        'channelTitle': value.channelTitle,
        'description': value.description,
        'playlistId': value.playlistId,
        'position': value.position,
        'publishedAt': value.publishedAt,
        'resourceId': ResourceIdToJSON(value.resourceId),
        'thumbnails': ThumbnailDetailsToJSON(value.thumbnails),
        'title': value.title,
        'eTag': value.eTag,
    };
}


