/* tslint:disable */
/* eslint-disable */
/**
 * Meta Localize
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChannelAuditDetails,
    ChannelAuditDetailsFromJSON,
    ChannelAuditDetailsFromJSONTyped,
    ChannelAuditDetailsToJSON,
    ChannelBrandingSettings,
    ChannelBrandingSettingsFromJSON,
    ChannelBrandingSettingsFromJSONTyped,
    ChannelBrandingSettingsToJSON,
    ChannelContentDetails,
    ChannelContentDetailsFromJSON,
    ChannelContentDetailsFromJSONTyped,
    ChannelContentDetailsToJSON,
    ChannelContentOwnerDetails,
    ChannelContentOwnerDetailsFromJSON,
    ChannelContentOwnerDetailsFromJSONTyped,
    ChannelContentOwnerDetailsToJSON,
    ChannelConversionPings,
    ChannelConversionPingsFromJSON,
    ChannelConversionPingsFromJSONTyped,
    ChannelConversionPingsToJSON,
    ChannelLocalization,
    ChannelLocalizationFromJSON,
    ChannelLocalizationFromJSONTyped,
    ChannelLocalizationToJSON,
    ChannelSnippet,
    ChannelSnippetFromJSON,
    ChannelSnippetFromJSONTyped,
    ChannelSnippetToJSON,
    ChannelStatistics,
    ChannelStatisticsFromJSON,
    ChannelStatisticsFromJSONTyped,
    ChannelStatisticsToJSON,
    ChannelStatus,
    ChannelStatusFromJSON,
    ChannelStatusFromJSONTyped,
    ChannelStatusToJSON,
    ChannelTopicDetails,
    ChannelTopicDetailsFromJSON,
    ChannelTopicDetailsFromJSONTyped,
    ChannelTopicDetailsToJSON,
} from './';

/**
 * 
 * @export
 * @interface Channel
 */
export interface Channel {
    /**
     * 
     * @type {ChannelAuditDetails}
     * @memberof Channel
     */
    auditDetails?: ChannelAuditDetails;
    /**
     * 
     * @type {ChannelBrandingSettings}
     * @memberof Channel
     */
    brandingSettings?: ChannelBrandingSettings;
    /**
     * 
     * @type {ChannelContentDetails}
     * @memberof Channel
     */
    contentDetails?: ChannelContentDetails;
    /**
     * 
     * @type {ChannelContentOwnerDetails}
     * @memberof Channel
     */
    contentOwnerDetails?: ChannelContentOwnerDetails;
    /**
     * 
     * @type {ChannelConversionPings}
     * @memberof Channel
     */
    conversionPings?: ChannelConversionPings;
    /**
     * 
     * @type {string}
     * @memberof Channel
     */
    eTag?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Channel
     */
    id?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Channel
     */
    kind?: string | null;
    /**
     * 
     * @type {{ [key: string]: ChannelLocalization; }}
     * @memberof Channel
     */
    localizations?: { [key: string]: ChannelLocalization; } | null;
    /**
     * 
     * @type {ChannelSnippet}
     * @memberof Channel
     */
    snippet?: ChannelSnippet;
    /**
     * 
     * @type {ChannelStatistics}
     * @memberof Channel
     */
    statistics?: ChannelStatistics;
    /**
     * 
     * @type {ChannelStatus}
     * @memberof Channel
     */
    status?: ChannelStatus;
    /**
     * 
     * @type {ChannelTopicDetails}
     * @memberof Channel
     */
    topicDetails?: ChannelTopicDetails;
}

export function ChannelFromJSON(json: any): Channel {
    return ChannelFromJSONTyped(json, false);
}

export function ChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): Channel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'auditDetails': !exists(json, 'auditDetails') ? undefined : ChannelAuditDetailsFromJSON(json['auditDetails']),
        'brandingSettings': !exists(json, 'brandingSettings') ? undefined : ChannelBrandingSettingsFromJSON(json['brandingSettings']),
        'contentDetails': !exists(json, 'contentDetails') ? undefined : ChannelContentDetailsFromJSON(json['contentDetails']),
        'contentOwnerDetails': !exists(json, 'contentOwnerDetails') ? undefined : ChannelContentOwnerDetailsFromJSON(json['contentOwnerDetails']),
        'conversionPings': !exists(json, 'conversionPings') ? undefined : ChannelConversionPingsFromJSON(json['conversionPings']),
        'eTag': !exists(json, 'eTag') ? undefined : json['eTag'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'kind': !exists(json, 'kind') ? undefined : json['kind'],
        'localizations': !exists(json, 'localizations') ? undefined : (json['localizations'] === null ? null : mapValues(json['localizations'], ChannelLocalizationFromJSON)),
        'snippet': !exists(json, 'snippet') ? undefined : ChannelSnippetFromJSON(json['snippet']),
        'statistics': !exists(json, 'statistics') ? undefined : ChannelStatisticsFromJSON(json['statistics']),
        'status': !exists(json, 'status') ? undefined : ChannelStatusFromJSON(json['status']),
        'topicDetails': !exists(json, 'topicDetails') ? undefined : ChannelTopicDetailsFromJSON(json['topicDetails']),
    };
}

export function ChannelToJSON(value?: Channel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'auditDetails': ChannelAuditDetailsToJSON(value.auditDetails),
        'brandingSettings': ChannelBrandingSettingsToJSON(value.brandingSettings),
        'contentDetails': ChannelContentDetailsToJSON(value.contentDetails),
        'contentOwnerDetails': ChannelContentOwnerDetailsToJSON(value.contentOwnerDetails),
        'conversionPings': ChannelConversionPingsToJSON(value.conversionPings),
        'eTag': value.eTag,
        'id': value.id,
        'kind': value.kind,
        'localizations': value.localizations === undefined ? undefined : (value.localizations === null ? null : mapValues(value.localizations, ChannelLocalizationToJSON)),
        'snippet': ChannelSnippetToJSON(value.snippet),
        'statistics': ChannelStatisticsToJSON(value.statistics),
        'status': ChannelStatusToJSON(value.status),
        'topicDetails': ChannelTopicDetailsToJSON(value.topicDetails),
    };
}


